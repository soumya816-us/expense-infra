pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        //retry(1)
    }
    // environment {
    //     DEBUG = 'true'
    // }

    parameters {
        
        choice(name: 'ACTION', choices: ['Apply', 'Destroy'], description: 'Select something')

    }
    stages {
        stage('Init') {
            steps {
                sh 'cd 00-vpc'
                sh 'terraform init --reconfigure'
            
            }
        }
        stage('Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh 'cd 00-vpc'
                    sh 'terraform plan -out=tfplan'
                }
            }
        }
        stage('Deploy') {
            when {
                expression { env.GIT_BRANCH != "origin/main" }
            }
            steps {

                    sh 'echo This is deploy'
                    //error 'pipeline failed'

            }
        }
        stage('Print Params'){
            steps{
                echo "Hello   ${params.PERSON}"
                echo "Biography: ${params.BIOGRAPHY}"
                echo "Toggle: ${params.TOGGLE}"
                echo "Choice: ${params.CHOICE}"
                echo "Password: ${params.PASSWORD}"  
            }
        }
        // stage('Approval'){
        //     input {
        //         message "Should we continue?"
        //         ok "Yes, we should."
        //         submitter "alice,bob"
        //         parameters {
        //             string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        //         }
        //     }
        //     steps {
        //         echo "Hello, ${PERSON}, nice to meet you."
        //     }
        // }
    }

    post {
        always{
            echo "This sections runs always"
            deleteDir()
        }
        success{
            echo "This section run when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
    }
}
